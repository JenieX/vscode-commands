{
	"$schema": "http://json-schema.org/draft-07/schema",
	"definitions": {
		"commandItem": {
			"oneOf": [
				{
					"type": "string",
					"markdownDescription": "Run this command (no arguments)."
				},
				{
					"$ref": "#/definitions/commandObject"
				}
			]
		},
		"pickStringOptionObject": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string",
					"minLength": 1
				},
				"value": {
					"type": "string",
					"minLength": 1
				}
			}
		},
		"statusBar": {
			"type": "object",
			"markdownDescription": "Show this command in [Status Bar](https://code.visualstudio.com/docs/getstarted/userinterface).",
			"properties": {
				"alignment": {
					"markdownDescription": "Represents the alignment of status bar items.",
					"type": "string",
					"enum": [
						"left",
						"right"
					]
				},
				"name": {
					"markdownDescription": "The name of the status bar item (Shown in context menu).",
					"type": "string"
				},
				"text": {
					"markdownDescription": "Text of the status bar item.",
					"type": "string"
				},
				"priority": {
					"markdownDescription": "The priority of the item. Higher values mean the item should be shown more to the left.",
					"type": "number"
				},
				"hidden": {
					"type": "boolean",
					"markdownDescription": "Do not show this Status Bar Item."
				},
				"activeEditorGlob": {
					"type": "string",
					"markdownDescription": "Only show when active editor file matches [glob](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) pattern."
				},
				"activeEditorLanguage": {
					"type": "string",
					"markdownDescription": "Only show when active editor [Language Id](https://code.visualstudio.com/docs/languages/identifiers) matches. Separate with comma `,` to match multiple languages."
				},
				"tooltip": {
					"markdownDescription": "Show when hovering over status bar item.",
					"type": "string"
				},
				"markdownTooltip": {
					"type": "string",
					"markdownDescription": "Show when hovering over status bar item (markdown). https://github.com/usernamehw/vscode-commands/issues/16"
				},
				"color": {
					"type": "string",
					"format": "color",
					"markdownDescription": "Color of the text in status bar."
				},
				"backgroundColor": {
					"type": "string",
					"markdownDescription": "Background of Status bar item (only `error` & `warning` values are allowed).",
					"enum": [
						"error",
						"warning"
					]
				},
				"updateEvents": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"kind": {
								"type": "string",
								"enum": [
									"onDidConfigurationChange",
									"onDidChangeActiveTextEditor",
									"onDidChangeTextEditorSelection",
									"interval"
								],
								"markdownEnumDescriptions": [
									"Fires when configuration changes.",
									"Fires when switching text editors (won't work on non-editor (webview,settingsUI,...).",
									"Fires when selection changes (cursor moves, selection changes).",
									"Fires every `\"value\"` milliseconds."
								]
							}
						},
						"if": {
							"properties": {
								"kind": {
									"const": "onDidConfigurationChange"
								}
							},
							"required": ["kind"]
						},
						"then": {
							"properties": {
								"settings": {
									"type": "array",
									"items": {
										"$ref": "commandsExtension://schemas/settings"
									}
								}
							}
						},
						"else": {
							"if": {
								"properties": {
									"kind": {
										"const": "interval"
									}
								},
								"required": ["kind"]
							},
							"then": {
								"properties": {
									"value": {
										"type": "integer",
										"default": 1000,
										"minimum": 1000
									}
								}
							}
						}
					}
				}
			}
		},
		"commandObject": {
			"type": "object",
			"markdownDescription": "Title of your custom command. Needs to be unique.",
			"properties": {
				"command": {
					"type": "string",
					"markdownDescription": "Command id to execute."
				},
				"args": {
					"markdownDescription": "Arguments for this command."
				},
				"when": {
					"type": "string",
					"markdownDescription": "a `when` expression of when the command will be avaliable at the command palette. (When `#commands.populateCommandPalette#` setting enabled.) See [VSCode API](https://code.visualstudio.com/api/references/when-clause-contexts)."
				},
				"delay": {
					"type": "number",
					"markdownDescription": "Delay (ms) BEFORE executing this command."
				},
				"repeat": {
					"type": "integer",
					"markdownDescription": "Run this command or sequence this number of times.",
					"minimum": 1
				},
				"icon": {
					"type": "string",
					"markdownDescription": "Add icon from codicons list [Icons list](https://code.visualstudio.com/api/references/icons-in-labels#icon-listing)",
					"$ref": "commandsExtension://schemas/codicons"
				},
				"markdownTooltip": {
					"type": "string",
					"markdownDescription": "Add custom markdown text to Tree View hover tooltip."
				},
				"disableTooltip": {
					"type": "boolean",
					"markdownDescription": "Do not show the hover tooltip for this Tree View Item."
				},
				"iconColor": {
					"type": "string",
					"markdownDescription": "Use existing colors for icon [Color id list](https://code.visualstudio.com/api/references/theme-color)",
					"$ref": "commandsExtension://schemas/colors"
				},
				"statusBar": {
					"$ref": "#/definitions/statusBar"
				},
				"sequence": {
					"markdownDescription": "Execute multiple commands.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/commandItem"
					}
				},
				"nestedItems": {
					"type": "object",
					"markdownDescription": "Makes this item a folder.",
					"patternProperties": {
						"^.*$": {
							"$ref": "#/definitions/commandItem"
						}
					},
					"default": {}
				},
				"hidden": {
					"type": "boolean",
					"markdownDescription": "Do not show this in the Tree View."
				},
				"inputs": {
					"type": "array",
					"description": "Inputs similar to VSCode input variables https://code.visualstudio.com/docs/editor/variables-reference#_input-variables",
					"items": {
						"oneOf": [
							{
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"minLength": 1
									},
									"type": {
										"type": "string",
										"enum": ["pickString"]
									},
									"options": {
										"type": "array",
										"items": {
											"oneOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/definitions/pickStringOptionObject"
												}
											]
										},
										"minItems": 1
									},
									"description": {
										"type": "string"
									},
									"default": {
										"type": "string",
										"description": "Default value that will be used if the user doesn't enter something else."
									}
								},
								"required": [
									"id",
									"type",
									"options"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"minLength": 1
									},
									"type": {
										"type": "string",
										"enum": ["promptString"]
									},
									"description": {
										"type": "string"
									},
									"convertType": {
										"type": "string",
										"enum": [
											"boolean",
											"number"
										],
										"description": "Will only work when there's only ONE variable and no other text."
									},
									"default": {
										"type": "string",
										"description": "Default value that will be used if the user doesn't enter something else."
									},
									"password": {
										"type": "boolean",
										"description": "Set to true to input with a password prompt that will not show the typed value."
									}
								},
								"required": [
									"id",
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"minLength": 1
									},
									"type": {
										"type": "string",
										"enum": ["command"]
									},
									"command": {
										"type": "string"
									},
									"args": {}
								},
								"required": [
									"id",
									"type",
									"command"
								],
								"additionalProperties": false
							}
						]
					}
				}
			},
			"$ref": "commands.schema.json#/definitions/argsTypes",
			"additionalProperties": false
		}
	},

	"type": "object",
	"properties": {
		"commands.commands": {
			"type": "object",
			"patternProperties": {
				"^.*$": {
					"$ref": "#/definitions/commandItem"
				}
			},
			"default": {}
		},
		"commands.workspaceCommands": {
			"type": "object",
			"patternProperties": {
				"^.*$": {
					"$ref": "#/definitions/commandItem"
				}
			},
			"default": {}
		}
	}
}